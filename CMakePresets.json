{
  "$schema": "https://cmake.org/cmake/help/latest/_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json",
  "version": 10,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 31,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "common",
      "hidden": true,
      "binaryDir": "${sourceDir}/.build/${presetName}",
      "cacheVariables": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": {
          "type": "BOOL",
          "value": "ON"
        },
        "CMAKE_UNITY_BUILD": {
          "type": "BOOL",
          "value": "OFF"
        },
        "CMAKE_UNITY_BUILD_BATCH_SIZE": {
          "type": "STRING",
          "value": "32"
        },
        "CMAKE_CONFIGURATION_TYPES": {
          "type": "STRING",
          "value": "Debug;Release;RelWithDebInfo;MinSizeRel;"
        }
      },
      "environment": {
        "MY_ENVIRONMENT_VARIABLE": "just_example"
      }
    },
    {
      "name": "vcpkg",
      "inherits": "common",
      "displayName": "vcpkg",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/vcpkg",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
        "CMAKE_MAKE_PROGRAM": "ninja",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "$comment": "We have to build boost to match version 1.88.0",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "vcpkg-msvc",
      "inherits": "common",
      "displayName": "vcpkg-msvc",
      "generator": "Visual Studio 17 2022",
      "architecture": "x64",
      "toolset": "v143",
      "binaryDir": "${sourceDir}/build/vcpkg-msvc",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "$comment": "We have to build boost to match version 1.88.0",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "vcpkg-llvm",
      "inherits": "common",
      "displayName": "vcpkg-llvm",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/vcpkg-llvm",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CXX_FLAGS": "-stdlib=libc++",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_C_COMPILER": "clang",
        "$comment": "We have to build boost to match version 1.88.0",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "ninja-g++",
      "inherits": "common",
      "displayName": "Ninja Multi-Config with g++",
      "description": "build using Ninja generator and g++ compiler",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/ninja-g++",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": "g++",
        "CMAKE_C_COMPILER": "gcc",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "ninja-multi",
      "inherits": "common",
      "displayName": "Ninja Multi-Config",
      "description": "build using Ninja generator",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/ninja-multi",
      "cacheVariables": {}
    },
    {
      "name": "ninja",
      "inherits": "common",
      "displayName": "Ninja",
      "description": "build using Ninja generator",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": {
          "type": "STRING",
          "value": "Debug"
        },
        "$comment": "We have to build boost to match version 1.87",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "ninja-llvm",
      "inherits": "ninja",
      "displayName": "ninja-llvm",
      "description": "build using Ninja Multi-Config generator and llvm toolchain",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/ninja-llvm",
      "cacheVariables": {
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_CXX_EXTENSIONS": "ON",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_FLAGS": "-stdlib=libc++",
        "CMAKE_CXX_SCAN_FOR_MODULES": "ON",
        "CMAKE_CXX_MODULE_STD": "ON",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_C_FLAGS": "",
        "OM_CLANG_TIDY": "OFF",
        "$comment": "We have to build boost with clang++ cause of libc++",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "ninja-clang",
      "inherits": "ninja",
      "displayName": "Ninja-clang",
      "description": "build using Ninja generator and clang++ compiler",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/ninja-clang",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": {
          "type": "INTERNAL",
          "value": "clang++"
        },
        "CMAKE_C_COMPILER": {
          "type": "INTERNAL",
          "value": "clang"
        },
        "OM_CLANG_TIDY": "OFF",
        "$comment": "We have to build boost with clang++ to match version 1.87",
        "OM_BUILD_BOOST": "ON"
      }
    },
    {
      "name": "xcode",
      "inherits": "common",
      "displayName": "xcode",
      "description": "build using Xcode generator",
      "generator": "Xcode",
      "binaryDir": "${sourceDir}/build/xcode",
      "cacheVariables": {},
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "vs2022-x64",
      "inherits": "common",
      "generator": "Visual Studio 17 2022",
      "displayName": "Visual Studio 17 2022",
      "description": "build using Visual Studio 17 2022 generator",
      "architecture": "x64",
      "toolset": "v143",
      "binaryDir": "${sourceDir}/build/vs2022-x64",
      "cacheVariables": {
        "CMAKE_MSVC_RUNTIME_LIBRARY": {
          "type": "INTERNAL",
          "value": "MultiThreaded$<$<CONFIG:Debug>:Debug>"
        },
        "OM_BUILD_BOOST": {
          "type": "INTERNAL",
          "value": "ON"
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "mingw",
      "inherits": "ninja",
      "displayName": "MinGW Makefiles",
      "binaryDir": "${sourceDir}/build/mingw",
      "description": "This build MinGW Makefiles on Windows",
      "generator": "MinGW Makefiles",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": {
          "type": "INTERNAL",
          "value": "g++"
        },
        "CMAKE_C_COMPILER": {
          "type": "INTERNAL",
          "value": "gcc"
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "vcpkg",
      "configurePreset": "vcpkg"
    },
    {
      "name": "vcpkg-msvc",
      "configurePreset": "vcpkg-msvc"
    },
    {
      "name": "ninja",
      "configurePreset": "ninja"
    },
    {
      "name": "ninja-g++",
      "configurePreset": "ninja-g++"
    },
    {
      "name": "ninja-multi",
      "configurePreset": "ninja-multi"
    },
    {
      "name": "ninja-llvm",
      "configurePreset": "ninja-llvm"
    },
    {
      "name": "ninja-clang",
      "configurePreset": "ninja-clang"
    },
    {
      "name": "xcode",
      "configurePreset": "xcode"
    },
    {
      "name": "vs2022-x64",
      "configurePreset": "vs2022-x64"
    },
    {
      "name": "mingw",
      "configurePreset": "mingw"
    }
  ],
  "testPresets": [
    {
      "name": "ninja",
      "configurePreset": "ninja",
      "output": { "outputOnFailure": true },
      "execution": { "noTestsAction": "error", "stopOnFailure": false }
    },
    {
      "name": "vcpkg",
      "description": "vcpkg presets config description tests",
      "configurePreset": "vcpkg",
      "output": {
        "shortProgress": true,
        "verbosity": "verbose",
        "outputOnFailure": true
      },
      "execution": {
        "stopOnFailure": false,
        "enableFailover": true,
        "jobs": 1,
        "noTestsAction": "error"
      }
    }
  ],
  "packagePresets": [
    {
      "name": "zip",
      "configurePreset": "ninja"
    }
  ],
  "workflowPresets": [
    {
      "name": "ninja",
      "steps": [
        {
          "type": "configure",
          "name": "ninja"
        },
        {
          "type": "build",
          "name": "ninja"
        },
        {
          "type": "test",
          "name": "ninja"
        },
        {
          "type": "package",
          "name": "zip"
        }
      ]
    }
  ]
}
