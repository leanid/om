{
  "$schema": "https://cmake.org/cmake/help/latest/_downloads/3e2d73bff478d88a7de0de736ba5e361/schema.json",
  "version": 10,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 31,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "common",
      "hidden": true,
      "binaryDir": "${sourceDir}/.build/${presetName}",
      "cacheVariables": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": {
          "type": "BOOL",
          "value": "ON"
        },
        "CMAKE_UNITY_BUILD": {
          "type": "BOOL",
          "value": "ON"
        },
        "CMAKE_UNITY_BUILD_BATCH_SIZE": {
          "type": "STRING",
          "value": "32"
        },
        "CMAKE_CONFIGURATION_TYPES": {
          "type": "STRING",
          "value": "Debug;Release;RelWithDebInfo;MinSizeRel;"
        }
      },
      "environment":
      {
         "MY_ENVIRONMENT_VARIABLE": "just_example"
      },
      "vendor":
      {
        "$comment": [
          "This is just example of custom settings",
          "for any vendor IDE or else",
          "Preset files specifying version 10 or above",
          "may include comments using the key $comment",
          "at any level within the JSON object to provide documentation"
        ],
        "example.com/ExampleIDE/1.0": {
          "autoFormat": true
        },
        "qt.io/QtCreator/1.0": {
          "debugger":
          {
            "DisplayName": "GNU gdb 11.2.0 for MinGW 11.2.0 64-bit",
            "Abis": ["x86-windows-msys-pe-64bit"],
            "Binary": "C:/Qt/Tools/mingw1120_64/bin/gdb.exe",
            "EngineType": 1,
            "Version": "11.2.0"
          }
        }
      }
    },
    {
      "name": "vcpkg",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/vcpkg",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
        "CMAKE_MAKE_PROGRAM": "ninja",
        "CMAKE_CXX_COMPILER": "cl",
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },
    {
      "name": "ninja-multi",
      "inherits": "common",
      "displayName": "Ninja Multi-Config",
      "description": "build using Ninja generator",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/ninja-multi",
      "cacheVariables": {
      }
    },
    {
      "name": "ninja",
      "inherits": "common",
      "displayName": "Ninja",
      "description": "build using Ninja generator",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": {
          "type": "STRING",
          "value": "Debug"
        }
      }
    },
    {
      "name": "ninja-llvm",
      "inherits": "ninja",
      "displayName": "Ninja-llvm",
      "description": "build using Ninja generator",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/ninja-llvm",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": {
          "type": "INTERNAL",
          "value": "clang++"
        },
        "CMAKE_CXX_FLAGS": {
          "type": "STRING",
          "value": "-stdlib=libc++"
        },
        "CMAKE_C_COMPILER": {
          "type": "INTERNAL",
          "value": "clang"
        },
        "CMAKE_CXX_SCAN_FOR_MODULES": {
          "type": "INTERNAL",
          "value": "ON"
        },
        "CMAKE_CXX_MODULE_STD": {
          "type": "INTERNAL",
          "value": "ON"
        }
      }
    },
    {
      "name": "ninja-clang",
      "inherits": "ninja",
      "displayName": "Ninja-clang",
      "description": "build using Ninja generator and clang++ compiler",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/ninja-clang",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": {
          "type": "INTERNAL",
          "value": "clang++"
        },
        "CMAKE_C_COMPILER": {
          "type": "INTERNAL",
          "value": "clang"
        }
      }
    },
    {
      "name": "xcode",
      "inherits": "common",
      "displayName": "xcode",
      "description": "build using Xcode generator",
      "generator": "Xcode",
      "binaryDir": "${sourceDir}/build/xcode",
      "cacheVariables": {
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "vs2022-x64",
      "inherits": "common",
      "generator": "Visual Studio 17 2022",
      "displayName": "Visual Studio 17 2022",
      "description": "build using Visual Studio 17 2022 generator",
      "architecture": "x64",
      "toolset": "v143",
      "binaryDir": "${sourceDir}/build/vs2022-x64",
      "cacheVariables": {
        "CMAKE_MSVC_RUNTIME_LIBRARY":  {
          "type": "INTERNAL",
          "value": "MultiThreaded$<$<CONFIG:Debug>:Debug>"
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "mingw",
      "inherits": "ninja",
      "displayName": "MinGW Makefiles",
      "binaryDir": "${sourceDir}/build/mingw",
      "description": "This build MinGW Makefiles on Windows",
      "generator": "MinGW Makefiles",
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": {
          "type": "INTERNAL",
          "value": "g++"
        },
        "CMAKE_C_COMPILER": {
          "type": "INTERNAL",
          "value": "gcc"
        }
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }

    }
  ],
  "buildPresets": [
    {
      "name": "vcpkg",
      "configurePreset": "vcpkg"
    },
    {
      "name": "ninja",
      "configurePreset": "ninja"
    },
    {
      "name": "ninja-multi",
      "configurePreset": "ninja-multi"
    },
    {
      "name": "ninja-llvm",
      "configurePreset": "ninja-llvm"
    },
    {
      "name": "ninja-clang",
      "configurePreset": "ninja-clang"
    },
    {
      "name": "xcode",
      "configurePreset": "xcode"
    },
    {
      "name": "vs2022-x64",
      "configurePreset": "vs2022-x64"
    },
    {
      "name": "mingw",
      "configurePreset": "mingw"
    }
  ],
  "testPresets": [
    {
      "name": "ninja",
      "configurePreset": "ninja",
      "output": {"outputOnFailure": true},
      "execution": {"noTestsAction": "error", "stopOnFailure": true}
    }
  ],
  "packagePresets": [
    {
      "name": "zip",
      "configurePreset": "ninja"
    }
  ],
  "workflowPresets": [
    {
      "name": "ninja",
      "steps": [
        {
          "type": "configure",
          "name": "ninja"
        },
        {
          "type": "build",
          "name": "ninja"
        },
        {
          "type": "test",
          "name": "ninja"
        },
        {
          "type": "package",
          "name": "zip"
        }
      ]
    }
  ]
}
